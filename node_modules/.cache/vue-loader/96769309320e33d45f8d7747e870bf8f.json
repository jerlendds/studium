{"remainingRequest":"/home/intrigma/Projects/netnotes/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/intrigma/Projects/netnotes/src/override/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/intrigma/Projects/netnotes/src/override/App.vue","mtime":1618239214951},{"path":"/home/intrigma/Projects/netnotes/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/intrigma/Projects/netnotes/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBjeXRvc2NhcGUgZnJvbSAiY3l0b3NjYXBlIjsKaW1wb3J0IEhlbGxvV29ybGQgZnJvbSAiQC9jb21wb25lbnRzL0hlbGxvV29ybGQudnVlIjsKCmV4cG9ydCBkZWZhdWx0IHsKICAgIG5hbWU6ICJBcHAiLAoKICAgIGNvbXBvbmVudHM6IHsgSGVsbG9Xb3JsZCB9LAoKICAgIGRhdGEoKSB7CiAgICAgICAgcmV0dXJuIHsKICAgICAgICAgICAgc2hvd0N5R3JhcGg6IHRydWUsCiAgICAgICAgICAgIGN5R3JhcGg6IHVuZGVmaW5lZCwKICAgICAgICB9OwogICAgfSwKCiAgICBtb3VudGVkKCkgewogICAgICAgIHRoaXMuaW5pdEdyYXBoKCk7CiAgICB9LAoKICAgIG1ldGhvZHM6IHsKICAgICAgICBpbml0R3JhcGgoKSB7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuJHJlZnMuZ25vZGVzKTsKICAgICAgICAgICAgdmFyIGN5R3JhcGggPSBjeXRvc2NhcGUoewogICAgICAgICAgICAgICAgY29udGFpbmVyOiB0aGlzLiRyZWZzLmdub2RlcywKICAgICAgICAgICAgICAgIGVsZW1lbnRzOiBbCiAgICAgICAgICAgICAgICAgICAgLy8gbGlzdCBvZiBncmFwaCBlbGVtZW50cyB0byBzdGFydCB3aXRoCiAgICAgICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgICAgICAvLyBub2RlIGEKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBpZDogImEiIH0sCiAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIG5vZGUgYgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGlkOiAiYiIgfSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgLy8gZWRnZSBhYgogICAgICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGlkOiAiYWIiLCBzb3VyY2U6ICJhIiwgdGFyZ2V0OiAiYiIgfSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICBzdHlsZTogWwogICAgICAgICAgICAgICAgICAgIC8vIHRoZSBzdHlsZXNoZWV0IGZvciB0aGUgZ3JhcGgKICAgICAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGVjdG9yOiAibm9kZSIsCiAgICAgICAgICAgICAgICAgICAgICAgIHN0eWxlOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiYmFja2dyb3VuZC1jb2xvciI6ICIjNjY2IiwKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxhYmVsOiAiZGF0YShpZCkiLAogICAgICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgICAgIH0sCgogICAgICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICAgICAgc2VsZWN0b3I6ICJlZGdlIiwKICAgICAgICAgICAgICAgICAgICAgICAgc3R5bGU6IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgImxpbmUtY29sb3IiOiAiI2NjYyIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAidGFyZ2V0LWFycm93LWNvbG9yIjogIiNjY2MiLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgInRhcmdldC1hcnJvdy1zaGFwZSI6ICJ0cmlhbmdsZSIsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAiY3VydmUtc3R5bGUiOiAiYmV6aWVyIiwKICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgXSwKCiAgICAgICAgICAgICAgICBsYXlvdXQ6IHsKICAgICAgICAgICAgICAgICAgICBuYW1lOiAiZ3JpZCIsCiAgICAgICAgICAgICAgICAgICAgcm93czogMSwKICAgICAgICAgICAgICAgIH0sCgogICAgICAgICAgICAgICAgaGVhZGxlc3M6IGZhbHNlLAogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIGN5R3JhcGguYWRkKFsKICAgICAgICAgICAgICAgIHsKICAgICAgICAgICAgICAgICAgICBncm91cDogIm5vZGVzIiwKICAgICAgICAgICAgICAgICAgICBkYXRhOiB7IGlkOiAibjAiIH0sCiAgICAgICAgICAgICAgICAgICAgcG9zaXRpb246IHsgeDogMTAwLCB5OiAxMDAgfSwKICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICB7CiAgICAgICAgICAgICAgICAgICAgZ3JvdXA6ICJub2RlcyIsCiAgICAgICAgICAgICAgICAgICAgZGF0YTogeyBpZDogIm4xIiB9LAogICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uOiB7IHg6IDIwMCwgeTogMjAwIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgewogICAgICAgICAgICAgICAgICAgIGdyb3VwOiAiZWRnZXMiLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IHsgaWQ6ICJlMCIsIHNvdXJjZTogIm4wIiwgdGFyZ2V0OiAibjEiIH0sCiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICBdKTsKICAgICAgICB9LAogICAgfSwKfTsK"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;AAiBA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src/override","sourcesContent":["<template>\n    <div id=\"app\">\n\n        <div\n            v-if=\"showCyGraph\"\n            ref=\"gnodes\"\n            id=\"gnodes\"\n        ></div>\n\n        <hello-world />\n        <h2>Is this a vue based browser extension?!</h2>\n        <h3>YUP!</h3>\n    </div>\n\n</template>\n\n<script>\nimport cytoscape from \"cytoscape\";\nimport HelloWorld from \"@/components/HelloWorld.vue\";\n\nexport default {\n    name: \"App\",\n\n    components: { HelloWorld },\n\n    data() {\n        return {\n            showCyGraph: true,\n            cyGraph: undefined,\n        };\n    },\n\n    mounted() {\n        this.initGraph();\n    },\n\n    methods: {\n        initGraph() {\n            console.log(this.$refs.gnodes);\n            var cyGraph = cytoscape({\n                container: this.$refs.gnodes,\n                elements: [\n                    // list of graph elements to start with\n                    {\n                        // node a\n                        data: { id: \"a\" },\n                    },\n                    {\n                        // node b\n                        data: { id: \"b\" },\n                    },\n                    {\n                        // edge ab\n                        data: { id: \"ab\", source: \"a\", target: \"b\" },\n                    },\n                ],\n\n                style: [\n                    // the stylesheet for the graph\n                    {\n                        selector: \"node\",\n                        style: {\n                            \"background-color\": \"#666\",\n                            label: \"data(id)\",\n                        },\n                    },\n\n                    {\n                        selector: \"edge\",\n                        style: {\n                            width: 3,\n                            \"line-color\": \"#ccc\",\n                            \"target-arrow-color\": \"#ccc\",\n                            \"target-arrow-shape\": \"triangle\",\n                            \"curve-style\": \"bezier\",\n                        },\n                    },\n                ],\n\n                layout: {\n                    name: \"grid\",\n                    rows: 1,\n                },\n\n                headless: false,\n            });\n\n            cyGraph.add([\n                {\n                    group: \"nodes\",\n                    data: { id: \"n0\" },\n                    position: { x: 100, y: 100 },\n                },\n                {\n                    group: \"nodes\",\n                    data: { id: \"n1\" },\n                    position: { x: 200, y: 200 },\n                },\n                {\n                    group: \"edges\",\n                    data: { id: \"e0\", source: \"n0\", target: \"n1\" },\n                },\n            ]);\n        },\n    },\n};\n</script>\n"]}]}